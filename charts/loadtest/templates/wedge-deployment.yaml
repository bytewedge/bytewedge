apiVersion: apps/v1
kind: Deployment
metadata:
  name: wedge
  labels:
    {{- include "loadtest.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      loadtest: wedge
      {{- include "loadtest.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        loadtest: wedge
        {{- include "loadtest.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "loadtest.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: "test"
                operator: In
                values:
                - "true"
      containers:
        - name: wedge
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- with .Values.image }}
          image: "{{ .repository }}/bytewedge-wedge:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          command: ["/usr/local/bin/bytewedge-wedge"]
          args:
            - -id
            - {{ .Values.wedge.id | quote }}
            - -port
            - {{ .Values.wedge.port | quote }}
            - -mqtt
            - {{ .Values.wedge.mqtt | quote }}
            - -tags
            - {{ .Values.wedge.tags | quote }}
            - -interval
            - {{ .Values.wedge.interval | quote}}
          volumeMounts:
          - mountPath: /logs
            name: app-dir
          workingDir: /logs
          env:
            - name: WEDGE_CERT
              valueFrom:
                secretKeyRef:
                  name: wedge
                  key: cert
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          ports:
            - name: http
              containerPort: {{ .Values.wedge.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - emptyDir: {}
        name: app-dir
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
