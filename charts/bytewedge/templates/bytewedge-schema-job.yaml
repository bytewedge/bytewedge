apiVersion: batch/v1
kind: Job
metadata:
  name: bytewedge-ddl
  labels:
    bytewedge: schema
    {{- include "bytewedge.labels" . | nindent 4 }}

spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 10
  template:
    metadata:
      name: {{ include "bytewedge.fullname" . }}
      labels:
        bytewedge: schema
        {{- include "bytewedge.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "bytewedge.serviceAccountName" . }}
      initContainers:
        {{- with .Values.postgresql }}
        - name: bytewedge-job-init
          image: {{ .image }}
          imagePullPolicy: {{ .pullPolicy }}
          command: ["sh"]
          args: ["-c", "until pg_isready -h {{ .host }}; \
                        do \
                        echo 'Waiting for postgres at: {{ .host }}'; \
                        sleep 2; \
                        done"]
        {{- end }}
      containers:
        - name: bytewedge-ddl
          image: "{{ .Values.image.repository }}-jobs:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/local/bin/bytewedge-jobs
            - -comp
            - bytewedge
            - -host
            - "{{ .Values.postgresql.host }}"
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
      restartPolicy: Never
