apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bytewedge.fullname" . }}-query
  labels:
    bytewedge: query
    {{- include "bytewedge.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.query.replicaCount }}
  selector:
    matchLabels:
      bytewedge: query
      {{- include "bytewedge.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        bytewedge: query
        {{- include "bytewedge.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9102'
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "bytewedge.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: query-cockroachdb-ready
          {{- with .Values.postgresql }}
          image: {{ .image }}
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          command: ["sh", "-c"]
          args: ["until psql postgres://blob@{{ .Release.Name }}-cockroachdb-public:26257/blob?sslmode=disable -c '\\q'; \
                  do \
                  echo 'waiting postgres://blob@{{ .Release.Name }}-cockroachdb-public:26257/blob?sslmode=disable'; \
                  sleep 5; \
                  done"]
      containers:
        - name: {{ .Chart.Name }}-query
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- with .Values.image }}
          image: "{{ .repository }}-query:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          command:
          - /usr/local/bin/bytewedge-query
          args:
          - -blob
          - "postgres://blob@{{ .Release.Name }}-cockroachdb-public:26257/blob?sslmode=disable"
          - -port
          - {{ .Values.query.port | quote }}
          env:
          - name: GRPC_GO_LOG_VERBOSITY_LEVEL
            value: "99"
          - name: GRPC_GO_LOG_SEVERITY_LEVEL
            value: "warn"
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          ports:
            - name: grpc
              containerPort: {{ .Values.query.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.query.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
