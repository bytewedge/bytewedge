apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-postgresql-adapter
  labels:
    bytewedge: prometheus
    {{- include "bytewedge.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      bytewedge: prometheus
      {{- include "bytewedge.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        bytewedge: prometheus
        {{- include "bytewedge.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "bytewedge.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: prom-adapter-postgresql-db
          {{- with .Values.postgresql }}
          image: {{ .image }}
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          env:
          - name: PGPASSWORD
            value: secret
          - name: PGUSER
            value: postgres
          # -h postgresql must be the same value as timescaledb-single.clusterName
          - name: PGHOST
            value: postgresql
          command: ["sh", "-c"] 
          args: ["until psql -c '\\q'; \
                  do echo \"Waiting for postgresql at: ${PGHOST}\"; sleep 5; done; \
                  psql -tc \"SELECT 1 FROM pg_database WHERE datname = 'prometheus'\" | grep -q 1 || \
                  psql -c \"CREATE DATABASE prometheus\" -c \"CREATE EXTENSION pg_stat_statements\""]
      containers:
        - name: prometheus-postgresql-adapter
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "timescale/prometheus-postgresql-adapter:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /prometheus-postgresql-adapter
          args:
            # must be the same value as timescaledb-single.clusterName
            - -pg-host
            - "postgresql"
            - -pg-password
            - "secret"
            - -pg-database
            - "prometheus"
            - -pg-ssl-mode
            - "require"
            - -pg-prometheus-log-samples
          ports:
            - name: http
              containerPort: 9201
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
